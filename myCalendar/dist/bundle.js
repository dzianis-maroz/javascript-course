/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! unknown exports (runtime-defined) */
/*! runtime requirements:  */
eval("const calendar = document.getElementById('calendar');\r\nconst buttonMonthBack = document.getElementById('monthBack'); \r\nconst buttonMonthForward = document.getElementById('monthForward');\r\nconst listOfMonths = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\nconst monthNameAndYearNumber = document.getElementById('monthNameAndYearNumber');\r\n\r\n// ПОЛУЧАЕМ НАЧАЛЬНЫЕ ДАННЫЕ\r\n\r\nconst now = new Date();\r\nlet currentMonth = now.getMonth();\r\nlet currentYear = now.getFullYear();\r\n\r\n// ФУНКЦИЯ ОТРИСОВКИ КАЛЕНДАРЯ В HTML\r\n\r\nfunction drawCalender(year = currentYear, mon = currentMonth, htmlElem = calendar){\r\n\r\n  showCurrentDate(currentMonth, currentYear); // показываем выбранную дату (месяц, год) в html \r\n  \r\n  const month = mon;\r\n\r\n  const day = new Date(year, month);\r\n\r\n  // ничинаем рисовать таблицу-календарь\r\n\r\n  let table = '<table class = \"calendar\"><tr><th>MON</th><th>TUE</th><th>WED</th><th>THU</th><th>FRI</th><th class = \"weekend\">SAT</th><th class = \"weekend\">SUN</th></tr><tr>'\r\n\r\n  let firstDayOfMonth = getDayOfTheWeek(day);\r\n\r\n  // рисуем пустые ячейки таблицы до начала выбранного месяца\r\n  \r\n  for(let i = 0; i < firstDayOfMonth - 1; i++) {\r\n    table += '<td></td>';\r\n  }\r\n\r\n  // заполняем дни выбранного месяца\r\n\r\n  while(day.getMonth() == month) {\r\n    \r\n    switch(true) {\r\n      \r\n      case (month === now.getMonth() && year === currentYear) && (day.getDate() === new Date().getDate() && (getDayOfTheWeek(day) === 6 || getDayOfTheWeek(day) === 7)):\r\n        table += `<td id = ${day.getDate()} class = \"weekend current-day\">` + day.getDate() + '</td>';\r\n        break;\r\n\r\n      case (month === now.getMonth() && year === currentYear) && (day.getDate() === new Date().getDate()):\r\n        table += `<td id = ${day.getDate()} class = \"current-day\">` + day.getDate() + '</td>';\r\n        break;\r\n\r\n      case (getDayOfTheWeek(day) === 6 || getDayOfTheWeek(day) === 7):\r\n        table += `<td id = ${day.getDate()} class = \"weekend\">` + day.getDate() + '</td>';\r\n        break;\r\n\r\n      default:\r\n        table += `<td id = ${day.getDate()}>` + day.getDate() + '</td>'\r\n    }\r\n\r\n    let k = new Date(year, month + 1, 0);\r\n    let l = day.getDate();\r\n    let s = k.getDate()\r\n\r\n    if (getDayOfTheWeek(day) % 7 == 0 && l !== s) { //  перевод строки после каждого воскресенья, кроме воскресенья, которое является последним днем месяца\r\n        table += '</tr><tr>';\r\n    }\r\n\r\n    day.setDate(day.getDate() + 1);\r\n  }\r\n\r\n  // рисуем пустые ячейки, чтобы придать таблице правильную форму\r\n\r\n  let lastDayOfMonth = getDayOfTheWeek(day) - 1;\r\n\r\n  if(lastDayOfMonth !== 0) {\r\n    for(let i = lastDayOfMonth; i < 7; i++) {\r\n      table += '<td></td>';\r\n    }\r\n  }\r\n\r\n  // закрываем таблицу\r\n  \r\n  table += '</tr></table>'\r\n\r\n  htmlElem.innerHTML = table;\r\n}\r\n\r\n// ФУНКЦИЯ УСТАНОВКИ ВС ПОСЛЕДНИМ ДНЕМ НЕДЕЛИ\r\n\r\nfunction getDayOfTheWeek(date) { \r\nlet d = date.getDay();\r\n\r\nif(d == 0) {\r\n    d = 7;\r\n  }\r\n\r\nreturn d;\r\n}\r\n\r\n// ФУНКЦИИ ПЕРЕКЛЮЧЕНИЯ (+/-) МЕСЯЦА\r\n\r\ncounterIncrement = () => {\r\n  currentMonth += 1;\r\n  if(currentMonth == 12) {\r\n    currentMonth = 0;\r\n    currentYear += 1;\r\n  }\r\n  drawCalender(currentYear, currentMonth, calendar);\r\n}\r\n\r\ncounterDecrement = () => {\r\n  currentMonth -= 1;\r\n  if(currentMonth == -1) {\r\n    currentMonth = 11;\r\n    currentYear -= 1;\r\n  }\r\n  drawCalender(currentYear, currentMonth, calendar);\r\n}\r\n\r\n// ФУНКЦИИ ОТОБРАЖЕНИЯ ВЫБРАННОГО МЕСЯЦА И ГОДА\r\n\r\nfunction showCurrentDate(currentMonth, currentYear) {\r\n  monthNameAndYearNumber.innerText = `${listOfMonths[currentMonth]} ${currentYear}`;\r\n}\r\n\r\nbuttonMonthForward.addEventListener('click', counterIncrement);\r\nbuttonMonthBack.addEventListener('click', counterDecrement);\r\n\r\ndrawCalender();\n\n//# sourceURL=webpack://mycalendar/./src/index.js?");
/******/ })()
;